<?xml version="1.0" encoding="UTF-8"?>
<modification>
	<name>QuickCommerce P2P</name>
	<version>1.0</version>
	<code>quickcommerce_p2p</code>
	<author>lucaslopatka@gmail.com</author>
	
	<file path="admin/model/catalog/product.php">
		<operation>
			<search><![CDATA[
				public function getProductImages($product_id) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2ProductImages($product_id) {
		$query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "product_image WHERE product_id = '" . (int)$product_id . "' ORDER BY sort_order ASC");

		return $query->rows;
	}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getProductDiscounts($product_id) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2ProductDiscounts($product_id) {
		$query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "product_discount WHERE product_id = '" . (int)$product_id . "' ORDER BY quantity, priority, price");

		return $query->rows;
	}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getProductSpecials($product_id) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2ProductSpecials($product_id) {
		$query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "product_special WHERE product_id = '" . (int)$product_id . "' ORDER BY priority, price");

		return $query->rows;
	}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getProductRewards($product_id) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2ProductRewards($product_id) {
		$product_reward_data = array();

		$query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "product_reward WHERE product_id = '" . (int)$product_id . "'");

		foreach ($query->rows as $result) {
			$product_reward_data[$result['customer_group_id']] = array('points' => $result['points']);
		}

		return $product_reward_data;
	}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getProductDownloads($product_id) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2ProductDownloads($product_id) {
		$product_download_data = array();

		$query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "product_to_download WHERE product_id = '" . (int)$product_id . "'");

		foreach ($query->rows as $result) {
			$product_download_data[] = $result['download_id'];
		}

		return $product_download_data;
	}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getProductAttributes($product_id) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2ProductAttributes($product_id) {
		$product_attribute_data = array();

		$product_attribute_query = $this->db2->query("SELECT attribute_id FROM " . DB2_PREFIX . "product_attribute WHERE product_id = '" . (int)$product_id . "' GROUP BY attribute_id");

		foreach ($product_attribute_query->rows as $product_attribute) {
			$product_attribute_description_data = array();

			$product_attribute_description_query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "product_attribute WHERE product_id = '" . (int)$product_id . "' AND attribute_id = '" . (int)$product_attribute['attribute_id'] . "'");

			foreach ($product_attribute_description_query->rows as $product_attribute_description) {
				$product_attribute_description_data[$product_attribute_description['language_id']] = array('text' => $product_attribute_description['text']);
			}

			$product_attribute_data[] = array(
				'attribute_id'                  => $product_attribute['attribute_id'],
				'product_attribute_description' => $product_attribute_description_data
			);
		}

		return $product_attribute_data;
	}
			]]>
			</add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getProductOptions($product_id) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2ProductOptions($product_id) {
		$product_option_data = array();

		$product_option_query = $this->db2->query("SELECT * FROM `" . DB2_PREFIX . "product_option` po LEFT JOIN `" . DB2_PREFIX . "option` o ON (po.option_id = o.option_id) LEFT JOIN `" . DB2_PREFIX . "option_description` od ON (o.option_id = od.option_id) WHERE po.product_id = '" . (int)$product_id . "' AND od.language_id = '" . (int)$this->config->get('config_language_id') . "'");

		foreach ($product_option_query->rows as $product_option) {
			$product_option_value_data = array();

			$product_option_value_query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "product_option_value WHERE product_option_id = '" . (int)$product_option['product_option_id'] . "'");

			foreach ($product_option_value_query->rows as $product_option_value) {
				$product_option_value_data[] = array(
					'product_option_value_id' => $product_option_value['product_option_value_id'],
					'option_value_id'         => $product_option_value['option_value_id'],
					'quantity'                => $product_option_value['quantity'],
					'subtract'                => $product_option_value['subtract'],
					'price'                   => $product_option_value['price'],
					'price_prefix'            => $product_option_value['price_prefix'],
					'points'                  => $product_option_value['points'],
					'points_prefix'           => $product_option_value['points_prefix'],
					'weight'                  => $product_option_value['weight'],
					'weight_prefix'           => $product_option_value['weight_prefix']
				);
			}

			$product_option_data[] = array(
				'product_option_id'    => $product_option['product_option_id'],
				'product_option_value' => $product_option_value_data,
				'option_id'            => $product_option['option_id'],
				'name'                 => $product_option['name'],
				'type'                 => $product_option['type'],
				'value'                => $product_option['value'],
				'required'             => $product_option['required']
			);
		}

		return $product_option_data;
	}
			]]>
			</add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getProductCategories($product_id) {
			]]></search>
			<add position="before">
			<![CDATA[
	public function getDb2ProductCategories($product_id) {
		$product_category_data = array();

		$query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "product_to_category WHERE product_id = '" . (int)$product_id . "'");

		foreach ($query->rows as $result) {
			$product_category_data[] = $result['category_id'];
		}

		return $product_category_data;
	}
			]]>
			</add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getTotalProducts($data = array()) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2TotalProducts($data = array()) {
		$sql = "SELECT COUNT(DISTINCT db2p.product_id) AS total";

		if (!empty($data['filter_category_id'])) {
			$sql .= " FROM " . DB2_DATABASE . "." . DB2_PREFIX . "category_path db2cp LEFT JOIN " . DB2_DATABASE . "." . DB2_PREFIX . "product_to_category db2p2c ON (db2cp.category_id = db2p2c.category_id)";
			$sql .= " LEFT JOIN " . DB2_DATABASE . "." . DB2_PREFIX . "product db2p ON (db2p2c.product_id = db2p.product_id)";
		} else {
			$sql .= " FROM " . DB2_DATABASE . "." . DB2_PREFIX . "product db2p";
		}

		$sql .= " LEFT JOIN " . DB2_DATABASE . "." . DB2_PREFIX . "product_description db2pd ON (db2p.product_id = db2pd.product_id)";

		if (!isset($data['filter_match']) || empty($data['filter_match'])) {
			$sql .= " LEFT OUTER JOIN " . DB_DATABASE . "." . DB_PREFIX . "product p ON (db2p.mpn = p.model)";
		} else {
			$sql .= " INNER JOIN " . DB_DATABASE . "." . DB_PREFIX . "product p ON (db2p.mpn = p.model)";
		}

		$sql .= " WHERE db2pd.language_id = '" . (int)$this->config->get('config_language_id') . "'";

		if (!empty($data['filter_category_id'])) {
			if (!empty($data['filter_sub_category'])) {
				$sql .= " AND db2cp.path_id = '" . (int)$data['filter_category_id'] . "'";
			} else {
				$sql .= " AND db2p2c.category_id = '" . (int)$data['filter_category_id'] . "'";
			}
		}

		if (!empty($data['filter_name'])) {
			$sql .= " AND db2pd.name LIKE '" . $this->db2->escape($data['filter_name']) . "%'";
		}

		if (!empty($data['filter_model'])) {
			$sql .= " AND db2p.model LIKE '" . $this->db2->escape($data['filter_model']) . "%'";
		}

		if (!empty($data['filter_mpn'])) {
			$sql .= " AND db2p.mpn LIKE '" . $this->db2->escape($data['filter_mpn']) . "%'";
		}

		if (!empty($data['filter_sku'])) {
			$sql .= " AND db2p.sku LIKE '" . $this->db->escape($data['filter_sku']) . "%'";
		}

		/*if (isset($data['filter_price']) && !is_null($data['filter_price'])) {
			$sql .= " AND db2p.price LIKE '" . $this->db2->escape($data['filter_price']) . "%'";
		}

		if (isset($data['filter_quantity']) && !is_null($data['filter_quantity'])) {
			$sql .= " AND db2p.quantity = '" . (int)$data['filter_quantity'] . "'";
		}

		if (isset($data['filter_status']) && !is_null($data['filter_status'])) {
			$sql .= " AND db2p.status = '" . (int)$data['filter_status'] . "'";
		}*/

		$query = $this->db2->query($sql);

		return $query->row['total'];
	}
			]]>
			</add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getProduct($product_id) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2Product($product_id) {
		$query = $this->db2->query("SELECT DISTINCT *, (SELECT keyword FROM " . DB2_PREFIX . "url_alias WHERE query = 'product_id=" . (int)$product_id . "') AS keyword FROM " . DB2_PREFIX . "product p LEFT JOIN " . DB2_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'");

		return $query->row;
	}
			]]>
			</add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getProducts($data = array()) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2Products($data = array()) {
		$sql = "SELECT db2p.*, db2pd.*, p.product_id AS local_id, p.model AS local_model";

		if (!empty($data['filter_category_id'])) {
			$sql .= " FROM " . DB2_DATABASE . "." . DB2_PREFIX . "category_path db2cp LEFT JOIN " . DB2_DATABASE . "." . DB2_PREFIX . "product_to_category db2p2c ON (db2cp.category_id = db2p2c.category_id)";
			$sql .= " LEFT JOIN " . DB2_DATABASE . "." . DB2_PREFIX . "product db2p ON (db2p2c.product_id = db2p.product_id)";
		} else {
			$sql .= " FROM " . DB2_DATABASE . "." . DB2_PREFIX . "product db2p";
		}
		
		$sql .= " LEFT JOIN " . DB2_DATABASE . "." . DB2_PREFIX . "product_description db2pd ON (db2p.product_id = db2pd.product_id)";

		if (!isset($data['filter_match']) || empty($data['filter_match'])) {
			$sql .= " LEFT OUTER JOIN " . DB_DATABASE . "." . DB_PREFIX . "product p ON (db2p.mpn = p.model)";
		} else {
			$sql .= " INNER JOIN " . DB_DATABASE . "." . DB_PREFIX . "product p ON (db2p.mpn = p.model)";
		}
		
		$sql .= " WHERE db2pd.language_id = '" . (int)$this->config->get('config_language_id') . "'";
		
		if (!empty($data['filter_category_id'])) {
			if (!empty($data['filter_sub_category'])) {
				$sql .= " AND db2cp.path_id = '" . (int)$data['filter_category_id'] . "'";
			} else {
				$sql .= " AND db2p2c.category_id = '" . (int)$data['filter_category_id'] . "'";
			}
		}

		if (!empty($data['filter_name'])) {
			$sql .= " AND db2pd.name LIKE '" . $this->db2->escape($data['filter_name']) . "%'";
		}

		if (!empty($data['filter_model'])) {
			$sql .= " AND db2p.model LIKE '" . $this->db2->escape($data['filter_model']) . "%'";
		}

		if (!empty($data['filter_mpn'])) {
			$sql .= " AND db2p.mpn LIKE '" . $this->db2->escape($data['filter_mpn']) . "%'";
		}

		if (!empty($data['filter_sku'])) {
			$sql .= " AND db2p.sku LIKE '" . $this->db->escape($data['filter_sku']) . "%'";
		}

		/*if (isset($data['filter_price']) && !is_null($data['filter_price'])) {
			$sql .= " AND db2p.price LIKE '" . $this->db2->escape($data['filter_price']) . "%'";
		}

		if (isset($data['filter_quantity']) && !is_null($data['filter_quantity'])) {
			$sql .= " AND db2p.quantity = '" . (int)$data['filter_quantity'] . "'";
		}

		if (isset($data['filter_status']) && !is_null($data['filter_status'])) {
			$sql .= " AND db2p.status = '" . (int)$data['filter_status'] . "'";
		}*/
		
		$sql .= " GROUP BY db2p.product_id";

		$sort_data = array(
			'db2pd.name',
			'db2p.model',
			'db2p.price',
			'db2p.quantity',
			'db2p.status',
			'db2p.sort_order'
		);

		if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
			$sql .= " ORDER BY " . $data['sort'];
		} else {
			$sql .= " ORDER BY db2pd.name";
		}

		if (isset($data['order']) && ($data['order'] == 'DESC')) {
			$sql .= " DESC";
		} else {
			$sql .= " ASC";
		}

		if (isset($data['start']) || isset($data['limit'])) {
			if ($data['start'] < 0) {
				$data['start'] = 0;
			}

			if ($data['limit'] < 1) {
				$data['limit'] = 20;
			}

			$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
		}

		$query = $this->db2->query($sql);

		return $query->rows;
	}
			
			]]>
			</add>
		</operation>
	</file>
	
	<file path="admin/controller/catalog/product.php">
		<operation>
			<search><![CDATA[
				protected function getList() {
			]]></search>
			<add position="before"><![CDATA[
	public function getImportList() {
		$this->load->language('catalog/product');

		$this->load->model('catalog/product');

		if (isset($this->request->get['filter_name'])) {
			$filter_name = $this->request->get['filter_name'];
		} else {
			$filter_name = null;
		}

		if (isset($this->request->get['filter_model'])) {
			$filter_model = $this->request->get['filter_model'];
		} else {
			$filter_model = null;
		}

		if (isset($this->request->get['filter_price'])) {
			$filter_price = $this->request->get['filter_price'];
		} else {
			$filter_price = null;
		}

		if (isset($this->request->get['filter_quantity'])) {
			$filter_quantity = $this->request->get['filter_quantity'];
		} else {
			$filter_quantity = null;
		}

		if (isset($this->request->get['filter_status'])) {
			$filter_status = $this->request->get['filter_status'];
		} else {
			$filter_status = null;
		}

		if (isset($this->request->get['product_category'])) {
			$filter_category_id = $this->request->get['product_category'];
		} else {
			$filter_category_id = null;
		}

		if (isset($this->request->get['filter_match'])) {
			$filter_match = $this->request->get['filter_match'];
		} else {
			$filter_match = null;
		}

		if (isset($this->request->get['sort'])) {
			$sort = $this->request->get['sort'];
		} else {
			$sort = 'pd.name';
		}

		if (isset($this->request->get['order'])) {
			$order = $this->request->get['order'];
		} else {
			$order = 'ASC';
		}

		if (isset($this->request->get['page'])) {
			$page = $this->request->get['page'];
		} else {
			$page = 1;
		}

		$url = '';

		if (isset($this->request->get['filter_name'])) {
			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
		}

		if (isset($this->request->get['filter_model'])) {
			$url .= '&filter_model=' . urlencode(html_entity_decode($this->request->get['filter_model'], ENT_QUOTES, 'UTF-8'));
		}

		if (isset($this->request->get['filter_price'])) {
			$url .= '&filter_price=' . $this->request->get['filter_price'];
		}

		if (isset($this->request->get['filter_quantity'])) {
			$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
		}

		if (isset($this->request->get['filter_status'])) {
			$url .= '&filter_status=' . $this->request->get['filter_status'];
		}

		if (isset($this->request->get['filter_match'])) {
			$url .= '&filter_match=' . $this->request->get['filter_match'];
		}

		if (isset($this->request->get['sort'])) {
			$url .= '&sort=' . $this->request->get['sort'];
		}

		if (isset($this->request->get['order'])) {
			$url .= '&order=' . $this->request->get['order'];
		}

		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}

		$data['breadcrumbs'] = array();

		$data['breadcrumbs'][] = array(
			'text' => $this->language->get('text_home'),
			'href' => $this->url->link('common/dashboard', 'token=' . $this->session->data['token'], 'SSL')
		);

		$data['breadcrumbs'][] = array(
			'text' => $this->language->get('heading_title'),
			'href' => $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . $url, 'SSL')
		);

		$data['add'] = $this->url->link('catalog/product/add', 'token=' . $this->session->data['token'] . $url, 'SSL');
		$data['copy'] = $this->url->link('catalog/product/copy', 'token=' . $this->session->data['token'] . $url, 'SSL');
		$data['delete'] = $this->url->link('catalog/product/delete', 'token=' . $this->session->data['token'] . $url, 'SSL');

		$data['products'] = array();

		$filter_data = array(
			'filter_name'			=> $filter_name,
			'filter_model'			=> $filter_model,
			'filter_price'			=> $filter_price,
			'filter_quantity'		=> $filter_quantity,
			'filter_status'   		=> $filter_status,
			'filter_sub_category'	=> true,
			'filter_category_id'	=> (is_array($filter_category_id) && count($filter_category_id) > 0) ? $filter_category_id[0] : null, // Quick hack to make sure we only pick up one
			'filter_match'			=> $filter_match,
			'sort'					=> $sort,
			'order'					=> $order,
			'start'					=> ($page - 1) * $this->config->get('config_limit_admin'),
			'limit'					=> $this->config->get('config_limit_admin')
		);

		$this->load->model('tool/image');

		$db2_product_total = $this->model_catalog_product->getDb2TotalProducts($filter_data);

		$db2_results = $this->model_catalog_product->getDb2Products($filter_data);

		foreach ($db2_results as $result) {
			if (is_file(DIR_IMAGE . $result['image'])) {
				$image = $this->model_tool_image->resize($result['image'], 40, 40);
			} else {
				$image = $this->model_tool_image->resize('no_image.png', 40, 40);
			}

			$special = false;

			$db2_product_specials = $this->model_catalog_product->getDb2ProductSpecials($result['product_id']);

			foreach ($db2_product_specials  as $db2_product_special) {
				if (($db2_product_special['date_start'] == '0000-00-00' || strtotime($db2_product_special['date_start']) < time()) && ($db2_product_special['date_end'] == '0000-00-00' || strtotime($db2_product_special['date_end']) > time())) {
					$special = $db2_product_special['price'];

					break;
				}
			}

			$data['db2_products'][] = array(
				'local_id'   => (isset($result['local_id'])) ? $result['local_id'] : '',
				'local_model'=> (isset($result['local_model'])) ? $result['local_model'] : '',
				'product_id' => $result['product_id'],
				'image'      => $image,
				'name'       => $result['name'],
				'model'      => $result['model'],
				'price'      => $result['price'],
				'special'    => $special,
				'quantity'   => $result['quantity'],
				'status'     => ($result['status']) ? $this->language->get('text_enabled') : $this->language->get('text_disabled'),
				'edit'       => $this->url->link('catalog/db2_product/edit', 'token=' . $this->session->data['token'] . '&product_id=' . $result['product_id'] . $url, 'SSL')
			);
		}

		$db2_pagination = new Pagination();
		$db2_pagination->total = $db2_product_total;
		$db2_pagination->page = $page;
		$db2_pagination->limit = $this->config->get('config_limit_admin');
		$db2_pagination->url = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . $url . '&page={page}', 'SSL');

		$data['db2_pagination'] = $db2_pagination->render();

		$data['db2_results'] = sprintf($this->language->get('text_pagination'), ($db2_product_total) ? (($page - 1) * $this->config->get('config_limit_admin')) + 1 : 0, ((($page - 1) * $this->config->get('config_limit_admin')) > ($db2_product_total - $this->config->get('config_limit_admin'))) ? $db2_product_total : ((($page - 1) * $this->config->get('config_limit_admin')) + $this->config->get('config_limit_admin')), $db2_product_total, ceil($db2_product_total / $this->config->get('config_limit_admin')));

		$data['column_image'] = $this->language->get('column_image');
		$data['column_name'] = $this->language->get('column_name');
		$data['column_model'] = $this->language->get('column_model');
		$data['column_price'] = $this->language->get('column_price');
		$data['column_quantity'] = $this->language->get('column_quantity');
		$data['column_status'] = $this->language->get('column_status');
		$data['column_action'] = $this->language->get('column_action');

		$data['entry_name'] = $this->language->get('entry_name');

		$data['entry_qbname'] = $this->language->get('entry_qbname');
		$data['entry_parent'] = $this->language->get('entry_parent');

		$data['entry_model'] = $this->language->get('entry_model');
		$data['entry_price'] = $this->language->get('entry_price');
		$data['entry_quantity'] = $this->language->get('entry_quantity');
		$data['entry_status'] = $this->language->get('entry_status');

		if (isset($this->request->post['selected'])) {
			$data['selected'] = (array)$this->request->post['selected'];
		} else {
			$data['selected'] = array();
		}

		$data['sort'] = $sort;
		$data['order'] = $order;

		$data['token'] = $this->session->data['token'];

		// Categories
		$this->load->model('catalog/category');

		if (isset($this->request->post['product_category'])) {
			$categories = $this->request->post['product_category'];
		} elseif (isset($this->request->get['product_id'])) {
			$categories = $this->model_catalog_product->getDb2ProductCategories($this->request->get['product_id']);
		} else {
			$categories = array();
		}

		$data['product_categories'] = array();

		foreach ($categories as $category_id) {
			$category_info = $this->model_catalog_category->getDb2Category($category_id);

			if ($category_info) {
				$data['product_categories'][] = array(
					'category_id' => $category_info['category_id'],
					'name' => ($category_info['path']) ? $category_info['path'] . ' &gt; ' . $category_info['name'] : $category_info['name']
				);
			}
		}

		$this->response->setOutput($this->load->view('catalog/product_import_list.tpl', $data));
	}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
				protected function getList() {
			]]></search>
			<add position="after"><![CDATA[		
		// Categories
		$data['entry_category'] = $this->language->get('entry_category');
		
		$this->load->model('catalog/category');

		if (isset($this->request->post['product_category'])) {
			$categories = $this->request->post['product_category'];
		} elseif (isset($this->request->get['product_id'])) {
			$categories = $this->model_catalog_product->getDb2ProductCategories($this->request->get['product_id']);
		} else {
			$categories = array();
		}

		$data['product_categories'] = array();

		foreach ($categories as $category_id) {
			$category_info = $this->model_catalog_category->getDb2Category($category_id);

			if ($category_info) {
				$data['product_categories'][] = array(
					'category_id' => $category_info['category_id'],
					'name' => ($category_info['path']) ? $category_info['path'] . ' &gt; ' . $category_info['name'] : $category_info['name']
				);
			}
		}
			]]></add>
		</operation>
	</file>
	<file path="admin/view/template/catalog/product_list.tpl">
		<operation>
			<search><![CDATA[
				<?php echo $footer; ?>
			]]></search>
			<add position="before"><![CDATA[
	<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" id="p2p-import-modal" data-token="<?php echo $token; ?>">
		<div class="modal-dialog modal-xl">
		<div class="modal-content">
			<!--<div class="modal-header">
			  <button aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
			  <h4 id="mySmallModalLabel" class="modal-title">Edit Address</h4>
			</div>-->
			<style scoped>
			.modal-body {
				padding: 0;
			}
			</style>
			<div class="modal-body">
			  <div class="panel panel-default">
				<div class="panel-heading">	
					<h3 class="panel-title"><i class="fa fa-list-alt"></i> Import Products</h3>
					<button style="float: right" aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
				</div>
				<div class="panel-body">
					<div class="row">
						<div class="col-sm-12">
							<div class="well">
								<form class="form-horizontal" id="form-product-p2p-filter">
									<div class="row">
									<fieldset>
										<div class="col-sm-12">
											<div class="form-group">
												<label class="col-sm-2 control-label" for="input-name"><?php echo $entry_name; ?></label>
												<div class="col-sm-10">
													<select multiple class="form-control">
														<option selected="selected">QuickCommerce Parent Site</option>
														<option disabled="disabled">Demo Feed 1</option>
														<option disabled="disabled">Demo Feed 2</option>
													</select>
												</div>
											</div>
											<div class="form-group">
												<div class="col-sm-8 pull-right">
												<!-- EDIT -->
												<button id="qc-peer-shares" data-token="<?php echo $token; ?>" data-toggle="tooltip" title="View Products" class="btn btn-info pull-right"><i class="fa fa-list-alt"></i> View Products</button>
												<!-- END -->
												</div>
											</div>
										</div>
									</fieldset>
									</div>
									<div class="row">
									<fieldset>
										<div class="col-sm-4">
											<div class="form-group">
												<label class="col-sm-4 control-label" for="input-name"><?php echo $entry_name; ?></label>
												<div class="col-sm-8">
													<input type="text" name="filter_name" value="<?php echo $filter_name; ?>" placeholder="<?php echo $entry_name; ?>" id="input-name" class="form-control" />
												</div>
											</div>
											<div class="form-group">
												<label class="col-sm-4 control-label" for="input-model"><?php echo $entry_model; ?></label>
												<div class="col-sm-8">
													<input type="text" name="filter_model" value="<?php echo $filter_model; ?>" placeholder="<?php echo $entry_model; ?>" id="input-model" class="form-control" />
												</div>
											</div>
											<div class="form-group">
												<label class="col-sm-4 control-label" for="input-match"> </label>
												<div class="col-sm-8">
													<input type="checkbox" name="filter_match" value="1" id="input-match" class="form-control" style="display: inline-block; margin-right: 1em" checked="checked" /><b><?php echo 'Show matching products only'; ?></b>
												</div>
											</div>
										</div>
										<div class="col-sm-4">
											<div class="form-group">
												<label class="col-sm-4 control-label" for="input-price"><?php echo $entry_price; ?></label>
												<div class="col-sm-8">
													<input type="text" name="filter_price" value="<?php echo $filter_price; ?>" placeholder="<?php echo $entry_price; ?>" id="input-price" class="form-control" />
												</div>
											</div>
											<div class="form-group">
												<label class="col-sm-4 control-label" for="input-quantity"><?php echo $entry_quantity; ?></label>
												<div class="col-sm-8">
													<input type="text" name="filter_quantity" value="<?php echo $filter_quantity; ?>" placeholder="<?php echo $entry_quantity; ?>" id="input-quantity" class="form-control" />
												</div>
											</div>
										</div>
										<div class="col-sm-4">
											<div class="form-group">
												<label class="col-sm-4 control-label" for="input-category"><span data-toggle="tooltip" title="<?php echo $help_category; ?>"><?php echo 'Categories'; ?></span></label>
												<div class="col-sm-8">
												  <input type="text" name="category" value="" placeholder="<?php echo $entry_category; ?>" id="input-category" class="form-control" data-token="<?php echo $token; ?>" />
												  <div id="product-category" class="well well-sm" style="height: 150px; overflow: auto;">
													<?php foreach ($product_categories as $product_category) { ?>
													<div id="product-category<?php echo $product_category['category_id']; ?>"><i class="fa fa-minus-circle"></i> <?php echo $product_category['name']; ?>
													  <input type="hidden" name="product_category[]" value="<?php echo $product_category['category_id']; ?>" />
													</div>
													<?php } ?>
												  </div>
												</div>
											</div>
											<div class="form-group">
												<div class="col-sm-8 pull-right">
												<!-- EDIT -->
												<button type="button" id="button-p2p-import-filter" class="btn btn-primary pull-right"><i class="fa fa-search"></i> <?php echo $button_filter; ?></button>
												<!-- END -->
												</div>
											</div>
										</div>
									</fieldset>
									</div>
								</form>
							</div>
						</div>
					</div>
					<div class="row">
						<fieldset>
							<div class="col-sm-12">
								<div class="row">
									<div class="col-sm-12"><legend>Import Options</legend></div>
								</div>
							</div>
							<div class="col-sm-2" for="">	
								<div class="form-group">
									<label class="col-sm-8 control-label" for="import-images">Images</label>
									<div class="col-sm-2">
										<input type="checkbox" name="images" value="true" id="import-images" class="form-control" checked="checked" />
									</div>
								</div>
							</div>
							<div class="col-sm-2" for="">	
								<div class="form-group">
									<label class="col-sm-8 control-label" for="import-categories">Categories</label>
									<div class="col-sm-2">
										<input type="checkbox" name="categories" value="true" id="import-categories" class="form-control" checked="checked" />
									</div>
								</div>
							</div>
							<div class="col-sm-2" for="">	
								<div class="form-group">
									<label class="col-sm-8 control-label" for="import-attributes">Attributes</label>
									<div class="col-sm-2">
										<input type="checkbox" name="attributes" value="true" id="import-attributes" class="form-control" />
									</div>
								</div>
							</div>
							<div class="col-sm-2" for="">	
								<div class="form-group">
									<label class="col-sm-8 control-label" for="import-options">Options</label>
									<div class="col-sm-2">
										<input type="checkbox" name="options" value="true" id="import-options" class="form-control" />
									</div>
								</div>
							</div>
							<div class="col-sm-4" for="">	
								<div class="form-group">
									<div class="col-sm-6">
										<button id="qc-peer-import-selected" data-token="<?php echo $token; ?>" data-toggle="tooltip" title="Import Selected" class="btn btn-warning"><i class="fa fa-adjust"></i> Import Selected</button>
									</div>
									<div class="col-sm-6">
										<button id="qc-peer-import-all" data-token="<?php echo $token; ?>" data-toggle="tooltip" title="Import Selected" class="btn btn-success"><i class="fa fa-circle-o"></i> Import All</button>
									</div>
								</div>
							</div>
						</fieldset>
					</div>
					<div class="row" style="margin-top: 20px;">
						<div class="col-sm-12">
							<div class="panel panel-default">
							  <!--<div class="panel-heading">
								<h3 class="panel-title"><i class="fa fa-list"></i> <?php echo $text_list; ?></h3>
							  </div>-->
							  <div class="panel-body">
								<form action="<?php echo $delete; ?>" method="post" enctype="multipart/form-data" id="form-product-p2p-import">
								  <div class="table-responsive">
									<table class="table table-bordered table-hover">
									  <thead>
										<tr>
										  <td class="text-center"><?php echo $column_image; ?></td>
										  <td class="text-left"><?php if ($sort == 'pd.name') { ?>
											<a href="<?php echo $sort_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_name; ?></a>
											<?php } else { ?>
											<a href="<?php echo $sort_name; ?>"><?php echo $column_name; ?></a>
											<?php } ?></td>
										  <td class="text-left"><?php if ($sort == 'p.model') { ?>
											<a href="<?php echo $sort_model; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_model; ?></a>
											<?php } else { ?>
											<a href="<?php echo $sort_model; ?>"><?php echo $column_model; ?></a>
											<?php } ?></td>
										  <td class="text-right"><?php if ($sort == 'p.price') { ?>
											<a href="<?php echo $sort_price; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_price; ?></a>
											<?php } else { ?>
											<a href="<?php echo $sort_price; ?>"><?php echo $column_price; ?></a>
											<?php } ?></td>
										  <td class="text-right"><?php if ($sort == 'p.quantity') { ?>
											<a href="<?php echo $sort_quantity; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_quantity; ?></a>
											<?php } else { ?>
											<a href="<?php echo $sort_quantity; ?>"><?php echo $column_quantity; ?></a>
											<?php } ?></td>
										  <td class="text-left"><?php if ($sort == 'p.status') { ?>
											<a href="<?php echo $sort_status; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_status; ?></a>
											<?php } else { ?>
											<a href="<?php echo $sort_status; ?>"><?php echo $column_status; ?></a>
											<?php } ?></td>
										  <td style="width: 1px;" class="text-center"><input type="checkbox" onclick="$('input[name*=\'selected\']').prop('checked', this.checked);" /></td>
										</tr>
									  </thead>
									  <tbody>
										<tr>
										  <td class="text-center" colspan="8"><?php echo $text_no_results; ?></td>
										</tr>
									  </tbody>
									</table>
								  </div>
								</form>
								<div class="row">
								</div>
							  </div>
							</div>
						</div>
					</div>
				</div>
			  </div>
			</div>
		</div>
		</div>
	</div>
	<style scoped>
		.modal-xl {
			width: 1248px;
		}
	</style>
			]]></add>
		</operation>
	</file>
	
	<file path="admin/controller/catalog/category.php">
		<operation>
			<search><![CDATA[
				public function autocomplete() {
			]]></search>
			<add position="before"><![CDATA[
	public function db2_autocomplete() {
		$json = array();

		if (isset($this->request->get['filter_name'])) {
			$this->load->model('catalog/category');

			$filter_data = array(
				'filter_name' => $this->request->get['filter_name'],
				'sort'        => 'name',
				'order'       => 'ASC',
				'start'       => 0,
				'limit'       => 5
			);

			$results = $this->model_catalog_category->getDb2Categories($filter_data);

			foreach ($results as $result) {
				$json[] = array(
					'category_id' => $result['category_id'],
					'name'        => strip_tags(html_entity_decode($result['name'], ENT_QUOTES, 'UTF-8'))
				);
			}
		}

		$sort_order = array();

		foreach ($json as $key => $value) {
			$sort_order[$key] = $value['name'];
		}

		array_multisort($sort_order, SORT_ASC, $json);

		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}
			]]>
			</add>
		</operation>
	</file>
	
	<file path="admin/model/catalog/manufacturer.php">
		<operation>
			<search><![CDATA[
				public function getManufacturer($manufacturer_id) {
			]]></search>
			<add position="before">
			<![CDATA[
	public function getDb2Manufacturer($manufacturer_id) {
		$query = $this->db2->query("SELECT DISTINCT *, (SELECT keyword FROM " . DB2_PREFIX . "url_alias WHERE query = 'manufacturer_id=" . (int)$manufacturer_id . "') AS keyword FROM " . DB2_PREFIX . "manufacturer WHERE manufacturer_id = '" . (int)$manufacturer_id . "'");

		return $query->row;
	}
			]]>
			</add>
		</operation>
	</file>
	
	<file path="admin/model/catalog/category.php">
		<operation>
			<search><![CDATA[
				public function getCategory($category_id) {
			]]></search>
			<add position="before">
			<![CDATA[
	public function getDb2Category($category_id) {
		$query = $this->db2->query("SELECT DISTINCT *, (SELECT GROUP_CONCAT(cd1.name ORDER BY level SEPARATOR '&nbsp;&nbsp;&gt;&nbsp;&nbsp;') FROM " . DB_PREFIX . "category_path cp LEFT JOIN " . DB_PREFIX . "category_description cd1 ON (cp.path_id = cd1.category_id AND cp.category_id != cp.path_id) WHERE cp.category_id = c.category_id AND cd1.language_id = '" . (int)$this->config->get('config_language_id') . "' GROUP BY cp.category_id) AS path, (SELECT DISTINCT keyword FROM " . DB_PREFIX . "url_alias WHERE query = 'category_id=" . (int)$category_id . "') AS keyword FROM " . DB_PREFIX . "category c LEFT JOIN " . DB_PREFIX . "category_description cd2 ON (c.category_id = cd2.category_id) WHERE c.category_id = '" . (int)$category_id . "' AND cd2.language_id = '" . (int)$this->config->get('config_language_id') . "'");

		return $query->row;
	}
			]]>
			</add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getCategories($data = array()) {
			]]></search>
			<add position="before">
			<![CDATA[
	public function getDb2Categories($data = array()) {
		$sql = "SELECT cp.category_id AS category_id, GROUP_CONCAT(cd1.name ORDER BY cp.level SEPARATOR '&nbsp;&nbsp;&gt;&nbsp;&nbsp;') AS name, c1.parent_id, c1.sort_order FROM " . DB2_PREFIX . "category_path cp LEFT JOIN " . DB2_PREFIX . "category c1 ON (cp.category_id = c1.category_id) LEFT JOIN " . DB2_PREFIX . "category c2 ON (cp.path_id = c2.category_id) LEFT JOIN " . DB2_PREFIX . "category_description cd1 ON (cp.path_id = cd1.category_id) LEFT JOIN " . DB2_PREFIX . "category_description cd2 ON (cp.category_id = cd2.category_id) WHERE cd1.language_id = '" . (int)$this->config->get('config_language_id') . "' AND cd2.language_id = '" . (int)$this->config->get('config_language_id') . "'";

		if (!empty($data['filter_name'])) {
			$sql .= " AND cd2.name LIKE '" . $this->db2->escape($data['filter_name']) . "%'";
		}

		$sql .= " GROUP BY cp.category_id";

		$sort_data = array(
			'name',
			'sort_order'
		);

		if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
			$sql .= " ORDER BY " . $data['sort'];
		} else {
			$sql .= " ORDER BY sort_order";
		}

		if (isset($data['order']) && ($data['order'] == 'DESC')) {
			$sql .= " DESC";
		} else {
			$sql .= " ASC";
		}

		if (isset($data['start']) || isset($data['limit'])) {
			if ($data['start'] < 0) {
				$data['start'] = 0;
			}

			if ($data['limit'] < 1) {
				$data['limit'] = 20;
			}

			$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
		}

		$query = $this->db2->query($sql);

		return $query->rows;
	}
			]]>
			</add>
		</operation>
	</file>
	
	<file path="admin/model/catalog/option.php">
		<operation>
			<search><![CDATA[
				public function getOption($option_id) {
			]]></search>
			<add position="before">
			<![CDATA[
	public function getDb2Option($option_id) {
		$query = $this->db2->query("SELECT * FROM `" . DB2_PREFIX . "option` o LEFT JOIN " . DB2_PREFIX . "option_description od ON (o.option_id = od.option_id) WHERE o.option_id = '" . (int)$option_id . "' AND od.language_id = '" . (int)$this->config->get('config_language_id') . "'");

		return $query->row;
	}
			]]>
			</add>
		</operation>
		<operation>
			<search><![CDATA[
				public function getOptionValueDescriptions($option_id) {
			]]></search>
			<add position="before"><![CDATA[
	public function getDb2OptionValueDescriptions($option_id) {
		$option_value_data = array();

		$option_value_query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "option_value WHERE option_id = '" . (int)$option_id . "' ORDER BY sort_order");

		foreach ($option_value_query->rows as $option_value) {
			$option_value_description_data = array();

			$option_value_description_query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "option_value_description WHERE option_value_id = '" . (int)$option_value['option_value_id'] . "'");

			foreach ($option_value_description_query->rows as $option_value_description) {
				$option_value_description_data[$option_value_description['language_id']] = array('name' => $option_value_description['name']);
			}

			$option_value_data[] = array(
				'option_value_id'          => $option_value['option_value_id'],
				'option_value_description' => $option_value_description_data,
				'image'                    => $option_value['image'],
				'sort_order'               => $option_value['sort_order']
			);
		}

		return $option_value_data;
	}
			]]></add>
		</operation>
	</file>
	
	<file path="admin/model/catalog/attribute.php">
		<operation>
			<search><![CDATA[
				public function getAttribute($attribute_id) {
			]]></search>
			<add position="before">
			<![CDATA[
	public function getDb2Attribute($attribute_id) {
		$query = $this->db2->query("SELECT * FROM " . DB2_PREFIX . "attribute a LEFT JOIN " . DB2_PREFIX . "attribute_description ad ON (a.attribute_id = ad.attribute_id) WHERE a.attribute_id = '" . (int)$attribute_id . "' AND ad.language_id = '" . (int)$this->config->get('config_language_id') . "'");

		return $query->row;
	}
			]]>
			</add>
		</operation>
	</file>
</modification>