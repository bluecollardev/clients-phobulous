<?xml version="1.0" encoding="UTF-8"?>
<modification>
	<name>QuickCommerce Search</name>
	<version>1.0</version>
	<code>quickcommerce_search</code>
	<author>lucaslopatka@gmail.com</author>
	<file path="catalog/model/catalog/product.php">
		<operation>
			<search><![CDATA[
			$sql = "SELECT p.product_id, (SELECT AVG(rating) AS total FROM " . DB_PREFIX . "review r1 WHERE r1.product_id = p.product_id AND r1.status = '1' GROUP BY r1.product_id) AS rating, (SELECT price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1) AS discount, (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special";
			]]></search>
			<add position="replace"><![CDATA[
	if (!empty($data['filter_name']) || !empty($data['filter_tag'])) {
		$sql = "SELECT p.product_id, m.name AS manufacturer, pd.name, p.model, MATCH (pd.name) AGAINST ('" . $this->db->escape($data['filter_name']) . "*' IN BOOLEAN MODE) AS rel1, MATCH (p.model) AGAINST ('" . $this->db->escape($data['filter_name']) . "*' IN BOOLEAN MODE) AS rel2, MATCH (m.name) AGAINST ('" . $this->db->escape($data['filter_name']) ."*' IN BOOLEAN MODE) AS rel3, (SELECT AVG(rating) AS total FROM " . DB_PREFIX . "review r1 WHERE r1.product_id = p.product_id AND r1.status = '1' GROUP BY r1.product_id) AS rating, (SELECT price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1) AS discount, (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special";
	} else {
		$sql = "SELECT p.product_id, (SELECT AVG(rating) AS total FROM " . DB_PREFIX . "review r1 WHERE r1.product_id = p.product_id AND r1.status = '1' GROUP BY r1.product_id) AS rating, (SELECT price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1) AS discount, (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special";
	}
		]]></add>
		</operation>
		<operation>
			<search><![CDATA[
			$sql .= " LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'";
			]]></search>
			<add position="replace"><![CDATA[
		$sql .= " LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) LEFT JOIN " . DB_PREFIX . "manufacturer m ON (p.manufacturer_id = m.manufacturer_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'";
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
			if (!empty($data['filter_name'])) {
				$implode = array();
			]]></search>
			<add position="replace" offset="16"><![CDATA[
			/*if (!empty($data['filter_name'])) {
				$implode = array();

				$words = explode(' ', trim(preg_replace('/\s+/', ' ', $data['filter_name'])));

				foreach ($words as $word) {
					$implode[] = "pd.name LIKE '%" . $this->db->escape($word) . "%'";
				}

				if ($implode) {
					$sql .= " " . implode(" AND ", $implode) . "";
				}

				if (!empty($data['filter_description'])) {
					$sql .= " OR pd.description LIKE '%" . $this->db->escape($data['filter_name']) . "%'";
				}
			}*/
			
			if (!empty($data['filter_description'])) {
				$sql .= "pd.description LIKE '%" . $this->db->escape($data['filter_name']) . "%'";
			}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
			$sql .= " OR LCASE(p.model) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";
			]]></search>
			<add position="replace"><![CDATA[
			//$sql .= " OR LCASE(p.model) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
			$sql .= " AND (";
			]]></search>
			<add position="replace"><![CDATA[
			$sql .= " OR (";
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
			$sql .= " GROUP BY p.product_id";
			]]></search>
			<add position="replace"><![CDATA[
		if (!empty($data['filter_name']) || !empty($data['filter_tag'])) {
			$sql .= " GROUP BY p.product_id HAVING (rel1 + rel2 + rel3) > 0"; // Make sure to only return results that have a relevance score greater than 0
		} else {
			$sql .= " GROUP BY p.product_id";
		}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
			$sql .= " ORDER BY p.sort_order";
			]]></search>
			<add position="replace"><![CDATA[
		if (!empty($data['filter_name']) || !empty($data['filter_tag'])) {
			$sql .= " ORDER BY (rel1 + rel2 + rel3)";
		} else {
			$sql .= " ORDER BY p.sort_order";
		}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
			$sql .= " ASC, LCASE(pd.name) ASC";
			]]></search>
			<add position="replace"><![CDATA[
		if (!empty($data['filter_name']) || !empty($data['filter_tag'])) {
			$sql .= " DESC, LCASE(pd.name) ASC";
		} else {
			$sql .= " ASC, LCASE(pd.name) ASC";
		}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA[
			$product_data[$result['product_id']] = $this->getProduct($result['product_id']);
			]]></search>
			<add position="replace"><![CDATA[
			$product_data[$result['product_id']] = $this->getProduct($result['product_id']); // TODO: Find out what's making some products fail to load - probably a missing field somewhere
			if ($product_data[$result['product_id']] == false) unset($product_data[$result['product_id']]); // If the product didn't load unset the key
			]]></add>
		</operation>
	</file>
</modification>